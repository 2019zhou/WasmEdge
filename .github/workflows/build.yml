name: Build and Test WasmEdge on multiple platforms

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/build.yml"
      - "include/**"
      - "lib/**"
      - "plugins/**"
      - "examples/**"
      - "rpm/**"
      - "test/**"
      - "thirdparty/**"
      - "tools/**"
      - "CMakeLists.txt"
  pull_request:
    branches:
      - master
      - 'proposal/**'
    paths:
      - ".github/workflows/build.yml"
      - "include/**"
      - "lib/**"
      - "plugins/**"
      - "examples/**"
      - "rpm/**"
      - "test/**"
      - "thirdparty/**"
      - "tools/**"
      - "CMakeLists.txt"

jobs:
  get_version_v2:
    name: Retrieve version information (v2)
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prep.outputs.version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get version
      id: prep
      run: |
        # Retrieve annotated tags. Details: https://github.com/actions/checkout/issues/290
        git fetch --tags --force
        echo "Set version: $(git describe --match "[0-9].[0-9]*" --tag)"
        echo ::set-output name=version::$(git describe --match "[0-9].[0-9]*" --tag)

  build_macos:
    strategy:
      matrix:
        include:
          - name: MacOS 10.15
            host_runner: macos-10.15
            darwin_version: darwin_19
          - name: MacOS 11
            host_runner: macos-11
            darwin_version: darwin_20
          - name: MacOS 12
            host_runner: macos-12
            darwin_version: darwin_21
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.host_runner }}
    needs: get_version_v2
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Build WasmEdge
      run: |
        brew install llvm ninja boost cmake
        export PATH="/usr/local/opt/llvm/bin:$PATH"
        export LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
        export CPPFLAGS="-I/usr/local/opt/llvm/include"
        export CC=clang
        export CXX=clang++
        cmake -Bbuild -GNinja -DWASMEDGE_BUILD_TESTS=ON -DWASMEDGE_BUILD_PACKAGE="TGZ" .
        cmake --build build
    - name: Test WasmEdge
      continue-on-error: true
      run: |
        export DYLD_LIBRARY_PATH="$(pwd)/build/lib/api:$DYLD_LIBRARY_PATH"
        cd build
        ./tools/wasmedge/wasmedge -v
        ctest
        cd -
    - name: Test WasmEdge Package
      run: |
        cmake --build build --target package
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: WasmEdge-${{ needs.get_version_v2.outputs.version }}-${{ matrix.darwin_version }}_x86_64.tar.gz
        path: build/WasmEdge-${{ needs.get_version_v2.outputs.version }}-Darwin.tar.gz
